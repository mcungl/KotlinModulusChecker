group 'com.github.pauldambra'
version '0.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'com.google.guava', name: 'guava', version: '22.0'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
}

tasks.withType(Jar) {
    from(project.projectDir) {
        include 'MIT-license.txt'
        into 'META-INF'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar

            pom.withXml {
                asNode().with {
                    appendNode('packaging', 'jar')
                    appendNode('name', 'ModulusChecker')
                    appendNode('description', 'Java implementation of UK Bank Account Modulus Checking. Modulus Checking is a process used to determine if a given account number could be valid for a given sort code.')
                    appendNode('url', 'https://github.com/pauldambra/JavaModulusChecker')
                    appendNode('scm').with {
                        appendNode('url', 'https://github.com/pauldambra/JavaModulusChecker')
                        appendNode('connection', 'git@github.com:pauldambra/JavaModulusChecker.git')
                    }
                    appendNode('issueManagement').with {
                        appendNode('url', 'https://github.com/pauldambra/JavaModulusChecker/issues')
                        appendNode('system', 'GitHub')
                    }
                    appendNode('licenses').with {
                        appendNode('license').with {
                            appendNode('name', 'MIT')
                            appendNode('url', 'https://github.com/pauldambra/JavaModulusChecker/blob/master/MIT-license.txt')
                        }
                    }
                    appendNode('developers').with {
                        appendNode('developer').with {
                            appendNode('id', 'pauldambra')
                            appendNode('name', 'Paul D\'Ambra')
                            appendNode('email', 'paul.dambra@gmail.com')
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url "file:/${project.projectDir}/artifacts"
        }
        maven {
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
            credentials {
                username System.getenv('MAVEN_USER')
                password System.getenv('MAVEN_PASS')
            }
        }
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
